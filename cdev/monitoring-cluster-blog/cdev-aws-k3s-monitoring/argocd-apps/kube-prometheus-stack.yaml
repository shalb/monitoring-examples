apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring
  namespace: argocd
spec:
  destination:
    namespace: monitoring
    server: https://kubernetes.default.svc
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 39.5.0
    helm:
      skipCrds: true
      values: |
        kubeControllerManager:
          enabled: false


        kubeScheduler:
          enabled: false


        prometheusOperator:
          admissionWebhooks:
            enabled: false
          tls:
            enabled: false


        nodeExporter:
          serviceMonitor:
            relabelings:
              - sourceLabels: [__meta_kubernetes_endpoint_node_name]
                targetLabel: node


        #kubeDns:
        #  enabled: true


        #coreDns:
        #  enabled: false


        grafana:
          adminPassword: {{ .variables.grafana_password }}
          # Enable ingress if needed
          ingress:
            enabled: false
            annotations:                                                           
              cert-manager.io/cluster-issuer: letsencrypt-prod
              kubernetes.io/ingress: map[class:nginx] 
              kubernetes.io/tls-acme: "true"                                       
              nginx.ingress.kubernetes.io/backend-protocol: HTTP
            path: /
            hosts:
              - grafana.{{ .variables.cluster_name }}.{{ .variables.domain }}
            tls:
            - hosts:
              - grafana.{{ .variables.cluster_name }}.{{ .variables.domain }}
              secretName: grafana-tls-secret
          grafana.ini:
            server:
              root_url: https://grafana.{{ .variables.cluster_name }}.{{ .variables.domain }}
          additionalDataSources:
           - name: Alertmanager
             type: alertmanager
             url: http://kube-prometheus-stack-alertmanager:9093
             editable: true
             access: proxy
             version: 2
             jsonData:
               implementation: prometheus


        prometheus:
          prometheusSpec:
            serviceMonitorSelectorNilUsesHelmValues: false
            podMonitorSelectorNilUsesHelmValues: false
            probeSelectorNilUsesHelmValues: false
            ruleSelectorNilUsesHelmValues: false

            externalLabels:
              cluster_name: {{ .variables.cluster_name }}
              env: {{ .variables.env }}
              organization: {{ .variables.organization }}
              region: {{ .variables.region }}
              domain: {{ .variables.domain }}

            #retention: 1d
            retentionSize: 1GB

            # Enable persistant storage if needed
            #storageSpec:
            #  volumeClaimTemplate:
            #    spec:
            #      accessModes: ["ReadWriteOnce"]
            #      resources:
            #        requests:
            #          storage: 50Gi


        alertmanager:
          #alertmanagerSpec:
            # Enable persistant storage if needed
            #storage:
            #  volumeClaimTemplate:
            #    spec:
            #      accessModes: ["ReadWriteOnce"]
            #      resources:
            #        requests:
            #          storage: 1Gi
          config:
            global:
              resolve_timeout: 5m
            route:
              group_by: [...]
              group_wait: 9s
              group_interval: 9s
              repeat_interval: 120h
              receiver: blackhole
              routes:
              - receiver: default
                group_by: [...]
                match_re:
                  severity: "info|warning|critical"
                continue: false
                repeat_interval: 120h

            receivers:
            - name: blackhole
            - name: default
